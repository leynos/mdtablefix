name: CI

on:
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
      CS_ACCESS_TOKEN: ${{ secrets.CS_ACCESS_TOKEN }}
      CODESCENE_CLI_SHA256: ${{ vars.CODESCENE_CLI_SHA256 }}
    steps:
      - uses: actions/checkout@v4
      - uses: leynos/shared-actions/.github/actions/setup-rust@d806d2099c4f2bcdd5f0407e30d82df1de0d638a
      - name: Format
        run: make check-fmt
      - name: Lint
        run: make lint
      - id: generate-coverage
        uses: leynos/shared-actions/.github/actions/generate-coverage@d806d2099c4f2bcdd5f0407e30d82df1de0d638a
        with:
          output-path: lcov.info
          format: lcov
      - name: Archive lcov
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: lcov
          path: lcov.info
      - name: Install CodeScene coverage tool
        if: env.CS_ACCESS_TOKEN
        run: |
          set -euo pipefail
          curl -fsSL -o install-cs-coverage-tool.sh https://downloads.codescene.io/enterprise/cli/install-cs-coverage-tool.sh
          if [ -n "${CODESCENE_CLI_SHA256:-}" ]; then
            echo "${CODESCENE_CLI_SHA256}  install-cs-coverage-tool.sh" | sha256sum -c -
          fi
          bash install-cs-coverage-tool.sh -y
          rm install-cs-coverage-tool.sh
      - name: Upload coverage data to CodeScene
        if: env.CS_ACCESS_TOKEN && steps.generate-coverage.outcome == 'success'
        run: cs-coverage upload --format "lcov" --metric "line-coverage" "lcov.info"
